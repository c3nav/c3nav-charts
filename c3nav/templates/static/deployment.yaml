{{- if .Values.static.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-static" (include "c3nav.fullname" .) }}
  labels:
    {{- include "c3nav.labels" . | nindent 4 }}
    app.kubernetes.io/component: static
spec:
  {{- if not .Values.static.autoscaling.enabled }}
  replicas: {{ .Values.static.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "c3nav.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: static
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nginx
        {{- with .Values.static.podExtraAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "c3nav.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: static
    spec:
      {{- if or .Values.image.pullSecrets .Values.static.image.pullSecrets }}
      imagePullSecrets:
        {{- with .Values.image.pullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.static.image.pullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ include "c3nav.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.static.podSecurityContext | nindent 8 }}
      initContainers:
        - name: c3nav-copy-static-files
          securityContext:
            {{- toYaml .Values.core.securityContext | nindent 12 }}
          image: {{ include "c3nav.images.core" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["python manage.py collectstatic -l --no-input && python manage.py compress"]
          env:
            - name: K8S_SERVICE_NAME
              value: {{ printf "%s-%s" (include "c3nav.fullname" .) "core" | quote }}
            - name: C3NAV_DJANGO_STATIC_ROOT
              value: /static/static
            {{- include "c3nav.commonEnvVars" . | nindent 12}}
          volumeMounts:
            - name: c3nav-config
              mountPath: {{ include "c3nav.configPath" . | quote }}
              subPath: {{ include "c3nav.configKey" . }}
            - name: c3nav-secret
              mountPath: /etc/c3nav/django_secret
              subPath: {{ include "c3nav.djangoSecretKey" . }}
            - name: c3nav-secret
              mountPath: /etc/c3nav/tile_secret
              subPath: {{ include "c3nav.tileSecretKey" . }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath | quote }}
            - name: cache
              mountPath: /cache
            - name: staticfiles
              mountPath: /static
      containers:
        - name: nginx
          securityContext:
            {{- toYaml .Values.static.securityContext | nindent 12 }}
          image: {{ include "c3nav.images.static" . }}
          imagePullPolicy: {{ .Values.static.image.pullPolicy }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ .Values.c3nav.debug | quote }}
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8080"
            {{- if .Values.static.extraEnv }}
            {{- .Values.static.extraEnv | toYaml | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /app
              name: staticfiles
            - mountPath: /opt/bitnami/nginx/conf/nginx.conf
              name: nginx-config
              subPath: nginx.conf
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /static/CACHE/manifest.json
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /static/CACHE/manifest.json
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.static.resources | nindent 12 }}
        {{- if .Values.static.metrics.enabled }}
        - name: metrics
          image: {{ printf "%s/%s:%s" .Values.static.metrics.image.registry .Values.static.metrics.image.repository .Values.static.metrics.image.tag }}
          imagePullPolicy: {{ .Values.static.metrics.image.pullPolicy | quote }}
          {{- if .Values.static.metrics.securityContext.enabled }}
          securityContext: {{- omit .Values.static.metrics.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - /usr/bin/exporter
            - -nginx.scrape-uri
            - http://127.0.0.1:{{- .Values.static.metrics.port | default "8080" }}/status
            - -nginx.retries
            - "10"
          {{- if .Values.static.metrics.extraEnv }}
          env:
            {{- .Values.static.metrics.extraEnv | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: 9113
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 30
          {{- if .Values.static.metrics.resources }}
          resources: {{- toYaml .Values.static.metrics.resources | nindent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: staticfiles
          emptyDir:
            sizeLimit: 256Mi
        - name: nginx-config
          configMap:
            name: {{ printf "%s-static" (include "c3nav.fullname" .) }}
        - name: c3nav-config
          configMap:
            name: {{ include "c3nav.configMapName" . }}
        - name: c3nav-secret
          secret:
            secretName: {{ include "c3nav.secretName" . }}
        - name: data
          {{- if and .Values.persistence.enabled (has "ReadWriteMany" .Values.persistence.accessModes) }}
          persistentVolumeClaim:
            claimName: {{ include "c3nav.pvcName" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: cache
          emptyDir: {}
      affinity:
      {{- if .Values.static.affinity }}
        {{- toYaml .Values.static.affinity | nindent 8 }}
      {{- else }}
        {{- if .Values.static.podAntiAffinityPreset }}
        podAntiAffinity:
          {{- if eq .Values.static.podAntiAffinityPreset "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "c3nav.selectorLabels" . | nindent 20 }}
                    app.kubernetes.io/component: static
                topologyKey: kubernetes.io/hostname
              weight: 1
        {{- end }}
        {{- if and (not (empty .Values.static.nodeAffinityPreset.type)) (not (empty .Values.static.nodeAffinityPreset.key)) (not (empty .Values.static.nodeAffinityPreset.values)) }}
        nodeAffinity:
          {{- if eq .Values.static.nodeAffinityPreset.type "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          preferredDuringSchedulungIgnoredDuringExecution:
          {{- end }}
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.static.nodeAffinityPreset.key }}
                    operator: In
                    values:
                      {{- toYaml .Values.static.nodeAffinityPreset.values | nindent 22 }}
        {{- end }}
      {{- end }}
      {{- with .Values.static.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.static.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}