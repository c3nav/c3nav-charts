apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-db-migration" (include "c3nav.fullname" .) }}
  labels:
    {{- include "c3nav.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "%s-db-migration" (include "c3nav.fullname" .) }}
      labels:
        {{- include "c3nav.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "c3nav.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.core.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: c3nav-migrate
          securityContext:
              {{- toYaml .Values.core.securityContext | nindent 12 }}
          image: {{ include "c3nav.images.core" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["manage", "migrate"]
          env:
            - name: K8S_SERVICE_NAME
              value: {{ printf "%s-%s" (include "c3nav.fullname" .) "core" | quote }}
            {{- include "c3nav.commonEnvVars" . | nindent 12}}
          volumeMounts:
            - name: c3nav-config
              mountPath: {{ include "c3nav.configPath" . | quote }}
              subPath: {{ include "c3nav.configKey" . }}
            - name: c3nav-secret
              mountPath: /etc/c3nav/django_secret
              subPath: {{ include "c3nav.djangoSecretKey" . }}
            - name: c3nav-secret
              mountPath: /etc/c3nav/tile_secret
              subPath: {{ include "c3nav.tileSecretKey" . }}
            - name: data
              mountPath: {{ .Values.core.persistence.mountPath | quote }}
            - name: cache
              mountPath: /cache
      volumes:
        - name: c3nav-config
          configMap:
            name: {{ include "c3nav.configMapName" . }}
        - name: c3nav-secret
          secret:
            secretName: {{ include "c3nav.secretName" . }}
        - name: data
          emptyDir: {}
        - name: cache
          emptyDir: {}
      affinity:
      {{- if .Values.core.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- else }}
        {{- if and (not (empty .Values.core.nodeAffinityPreset.type)) (not (empty .Values.core.nodeAffinityPreset.key)) (not (empty .Values.core.nodeAffinityPreset.values)) }}
        nodeAffinity:
          {{- if eq .Values.core.nodeAffinityPreset.type "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          preferredDuringSchedulungIgnoredDuringExecution:
          {{- end }}
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.core.nodeAffinityPreset.key }}
                    operator: In
                    values:
                      {{- toYaml .Values.core.nodeAffinityPreset.values | nindent 22 }}
        {{- end }}
      {{- end }}
      {{- with .Values.core.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
