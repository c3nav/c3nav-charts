apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-core" (include "c3nav.fullname" .) }}
  labels:
    {{- include "c3nav.labels" . | nindent 4 }}
    app.kubernetes.io/component: core
spec:
  {{- if not .Values.core.autoscaling.enabled }}
  replicas: {{ .Values.core.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "c3nav.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: core
  template:
    metadata:
      {{- with .Values.core.podExtraAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "c3nav.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: core
    spec:
      {{- with .Values.image.pullSecrets }}
      image.pullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "c3nav.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.core.podSecurityContext | nindent 8 }}
      containers:
        - name: c3nav-core
          securityContext:
            {{- toYaml .Values.core.securityContext | nindent 12 }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.coreRepository (default .Chart.AppVersion .Values.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ['{{ if .Values.static.enabled }}web{{ else }}webstatic{{ end }}']
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.core.resources | nindent 12 }}
        {{- if .Values.core.metrics.enabled }}
        - name: metrics
          image: {{ printf "%s/%s:%s" .Values.core.metrics.image.registry .Values.core.metrics.image.repository .Values.core.metrics.image.tag }}
          imagePullPolicy: {{ .Values.core.metrics.image.pullPolicy | quote }}
          {{- if .Values.core.metrics.securityContext.enabled }}
          securityContext: {{- omit .Values.core.metrics.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          args: ['--stats.uri', 'http://127.0.0.1:5000/status']
          ports:
            - name: metrics
              containerPort: 9117
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
          {{- if .Values.core.metrics.resources }}
          resources: {{- toYaml .Values.core.metrics.resources | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with .Values.core.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
